version: '3.8'

services:
  mysql:
    image: mysql:8.4.0-oraclelinux8
    container_name: mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: laravel_db
      MYSQL_USER: laravel_user
      MYSQL_PASSWORD: user_password
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - back-network

  app:
    build:
      context: ./app
    container_name: laravel-app
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./app:/var/www/html
      - /var/www/vendor
    command: php-fpm
    networks:
      - back-network
      - front-network

  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: unless-stopped
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./app:/var/www/html
      - ./nginx/logs:/var/log/nginx
    ports:
      - "8080:80"
    depends_on:
      - app
    networks:
      - front-network

  sonarqube:
    image: sonarqube:lts
    container_name: sonarqube
    restart: unless-stopped
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://sonarqube_db:5432/sonarqube
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
    ports:
      - "9000:9000"
    depends_on:
      - sonarqube_db
    networks:
      - back-network
      - front-network
    sysctls:
      - "vm.max_map_count=262144"

  sonarqube_db:
    image: postgres:latest
    container_name: sonarqube_db
    restart: unless-stopped
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
      POSTGRES_DB: sonarqube
    volumes:
      - sonarqube_db_data:/var/lib/postgresql/data
    networks:
      - back-network

volumes:
  mysql_data:
  sonarqube_db_data:

networks:
  back-network:
    driver: bridge
  front-network:
    driver: bridge
