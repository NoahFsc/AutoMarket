name: Deploy Site to Server

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install OpenVPN
      run: sudo apt-get update && sudo apt-get install -y openvpn

    - name: Setup VPN
      run: |
        echo "Setting up VPN..."
        sudo mkdir -p /etc/openvpn
        echo "${{ secrets.VPN_CONFIG }}" > config.ovpn
        sudo mv config.ovpn /etc/openvpn/config.ovpn
        echo -e "${{ secrets.ENT_USERNAME }}\n${{ secrets.ENT_PASSWORD }}" | sudo tee /etc/openvpn/ent_credentials > /dev/null
        sudo sed -i 's/auth-user-pass/auth-user-pass \/etc\/openvpn\/ent_credentials/' /etc/openvpn/config.ovpn
        sudo openvpn --config /etc/openvpn/config.ovpn --daemon
        sleep 10 # Attendre que la connexion VPN soit établie
        sudo cat /var/log/syslog | grep openvpn # Afficher les journaux OpenVPN pour le débogage
        echo "VPN setup complete."

    - name: Verify VPN Connection
      run: |
        echo "Verifying VPN connection..."
        ip addr show tun0 || echo "Device tun0 does not exist"
        ip route
        sudo iptables -L -v -n
        traceroute 10.1.138.4 || echo "Traceroute failed"
        echo "VPN connection verification complete."

    - name: Setup SSH Key
      run: |
        echo "Setting up SSH key..."
        mkdir -p ~/.ssh
        echo "mkdir effectue ..."
        echo "${{ secrets.SSH_KEY }}" > id_rsa
        echo "id_rsa effectue ..."
        sudo mv id_rsa ~/.ssh/id_rsa
        echo "mv effectue ..."
        sudo chmod 600 ~/.ssh/id_rsa
        echo "chmod effectue ..."
        ssh-keyscan -v 10.1.138.4 >> ~/.ssh/known_hosts || { echo "ssh-keyscan failed"; exit 1; }
        echo "SSH key setup complete."
        echo "Contents of ~/.ssh:"
        ls -l ~/.ssh
        echo "Contents of ~/.ssh/id_rsa:"
        cat ~/.ssh/id_rsa

    - name: Deploy to server
      run: |
        echo "Deploying to server..."
        ssh etudiant@10.1.138.4 << 'EOF'
          cd /home/etudiant/AutoMarket &&
          git pull &&
          docker-compose down &&
          docker-compose up -d --build
        EOF
        echo "Deployment complete."